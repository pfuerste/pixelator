cmake_minimum_required(VERSION 3.0.0)
project(pixelator VERSION 0.1.0)

set(CMAKE_IGNORE_PATH "C:/Users/phili/anaconda3/Library")
set(gflags_DIR "C:/Users/phili/Documents/c_libraries/gflags-master/gflags-master/build/")
include_directories("C:/Users/phili/Documents/c_libraries/gflags-master/gflags-master/build/include/")
find_package(gflags REQUIRED)
include_directories(${gflags_INCLUDE_DIRS})
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
add_library(pixeling ${CMAKE_SOURCE_DIR}/source/pixeling.cpp ${CMAKE_SOURCE_DIR}/source/clustering.cpp)
add_library(clustering source/clustering.cpp)
target_link_libraries(pixeling clustering ${OpenCV_LIBS})

add_executable(io ${CMAKE_SOURCE_DIR}/source/io.cpp)
target_link_libraries(io gflags pixeling ${OpenCV_LIBS})

include(CTest)
enable_testing()
add_executable(basic_tests ${CMAKE_SOURCE_DIR}/Testing/basic_tests.cpp)
add_test(test basic_tests)
# set(CPACK_PROJECT_NAME ${PROJECT_NAME})
# set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
# include(CPack)